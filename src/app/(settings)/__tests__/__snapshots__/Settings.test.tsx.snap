// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Settings Screen Snapshot should render the Settings Screen successfully 1`] = `
<View
  testID="safe-layout"
>
  <View
    testID="header"
  >
    <Text
      testID="header-title"
    >
      settings
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="close-button"
    >
      <Close
        height={24}
        primaryColor="#D1D1D6"
        secondaryColor="#000000"
        width={24}
      />
    </View>
  </View>
  <RCTScrollView
    contentContainerClassName="px-4"
    contentContainerStyle={
      {
        "paddingBottom": 20,
        "paddingTop": 64,
      }
    }
    showsVerticalScrollIndicator={false}
  >
    <View>
      <Text
        className="ml-4 mt-8 mb-2"
        color="text-70"
        type="body2"
      >
        general
      </Text>
      <View
        className="rounded-xl overflow-hidden bg-background-secondary"
      >
        <View
          className="h-14 flex-row justify-between items-center px-4 bg-background-secondary"
        >
          <View
            className="flex-row items-center"
          >
            <View
              color="#000000"
              name="bell-outline"
              size={24}
              testID="mocked-material-community-icon"
            />
            <Text
              className="ml-4"
              color="text-100"
              type="body1"
            >
              notification
            </Text>
          </View>
          <View
            className="justify-center"
          >
            <RCTSwitch
              accessibilityRole="switch"
              onChange={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onTintColor="#B3D9FF"
              style={
                [
                  {
                    "alignSelf": "flex-start",
                  },
                  {
                    "backgroundColor": "#D1D1D6",
                    "borderRadius": 16,
                  },
                ]
              }
              thumbTintColor="#000000"
              tintColor="#D1D1D6"
              value={false}
            />
          </View>
        </View>
        <View
          className="border-b border-background-quaternary ml-14"
        />
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="rate-app-button"
        >
          <View>
            <Text
              testID="item-label"
            >
              rateApp
            </Text>
            <Text
              testID="item-left-icon"
            >
              star-outline
            </Text>
            <Text
              testID="item-right-icon"
            >
              chevron
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="settings-privacy-policy-button"
        >
          <View>
            <Text
              testID="item-label"
            >
              privacyPolicy
            </Text>
            <Text
              testID="item-left-icon"
            >
              file-lock-outline
            </Text>
            <Text
              testID="item-right-icon"
            >
              chevron
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="settings-terms-of-use-button"
        >
          <View>
            <Text
              testID="item-label"
            >
              termsOfUse
            </Text>
            <Text
              testID="item-left-icon"
            >
              file-document-outline
            </Text>
            <Text
              testID="item-right-icon"
            >
              chevron
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="faq-button"
        >
          <View>
            <Text
              testID="item-label"
            >
              faq
            </Text>
            <Text
              testID="item-left-icon"
            >
              help-circle-outline
            </Text>
            <Text
              testID="item-right-icon"
            >
              chevron
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 0.8,
            }
          }
          testID="delete-account-button"
        >
          <View>
            <Text
              testID="item-label"
            >
              deleteAccount
            </Text>
            <Text
              testID="item-left-icon"
            >
              trash-can-outline
            </Text>
          </View>
        </View>
      </View>
      <Text
        className="ml-4 mt-8 mb-2"
        color="text-70"
        type="body2"
      >
        socialMedia
      </Text>
      <View
        className="rounded-xl overflow-hidden bg-background-secondary"
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="tiktok-button"
        >
          <View>
            <Text
              testID="item-label"
            >
              tikTok
            </Text>
            <Text
              testID="item-custom-left-icon"
            >
              Custom
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="instagram-button"
        >
          <View>
            <Text
              testID="item-label"
            >
              instagram
            </Text>
            <Text
              testID="item-custom-left-icon"
            >
              Custom
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
