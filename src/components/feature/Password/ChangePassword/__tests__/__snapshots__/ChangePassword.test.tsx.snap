// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`ChangePassword Component Snapshot should render the ChangePassword Component successfully 1`] = `
<RCTScrollView
  bottomOffset={50}
  contentContainerClassName="px-4"
  contentContainerStyle={
    {
      "paddingBottom": 20,
      "paddingTop": 64,
    }
  }
  keyboardDismissMode="on-drag"
  keyboardShouldPersistTaps="handled"
  showsVerticalScrollIndicator={false}
>
  <View>
    <View
      className="gap-y-2"
    >
      <View
        className="w-full"
      >
        <Text
          allowFontScaling={false}
          className="text-[16px] leading-[19px] font-inter-medium text-text-70 my-1.5 mx-1"
          maxFontSizeMultiplier={1}
        >
          currentPassword
        </Text>
        <View
          className="flex-row items-center px-4 rounded-xl overflow-hidden bg-background-tertiary border border-transparent"
        >
          <TextInput
            allowFontScaling={false}
            autoCapitalize="none"
            autoComplete="password"
            autoCorrect={false}
            className="flex-1 py-3 text-text-100 placeholder:text-text-50 text-[16px] font-inter-medium"
            clearTextOnFocus={false}
            editable={true}
            enablesReturnKeyAutomatically={true}
            keyboardAppearance="dark"
            keyboardType="default"
            maxFontSizeMultiplier={1}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            onSubmitEditing={[Function]}
            passwordRules="minlength: 6; required: lower; required: upper; required: digit;"
            placeholder="currentPasswordPlaceholder"
            returnKeyType="next"
            secureTextEntry={true}
            spellCheck={false}
            submitBehavior="blurAndSubmit"
            testID="currentPassword"
            textAlignVertical="center"
            textContentType="password"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={10}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="password-toggle"
          >
            <View
              color="#FFFFFF"
              name="eye"
              size={20}
              testID="mocked-material-community-icon"
            />
          </View>
        </View>
      </View>
      <View
        className="w-full"
      >
        <Text
          allowFontScaling={false}
          className="text-[16px] leading-[19px] font-inter-medium text-text-70 my-1.5 mx-1"
          maxFontSizeMultiplier={1}
        >
          newPassword
        </Text>
        <View
          className="flex-row items-center px-4 rounded-xl overflow-hidden bg-background-tertiary border border-transparent"
        >
          <TextInput
            allowFontScaling={false}
            autoCapitalize="none"
            autoComplete="password"
            autoCorrect={false}
            className="flex-1 py-3 text-text-100 placeholder:text-text-50 text-[16px] font-inter-medium"
            clearTextOnFocus={false}
            editable={true}
            enablesReturnKeyAutomatically={true}
            keyboardAppearance="dark"
            keyboardType="default"
            maxFontSizeMultiplier={1}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            onSubmitEditing={[Function]}
            passwordRules="minlength: 6; required: lower; required: upper; required: digit;"
            placeholder="newPasswordPlaceholder"
            returnKeyType="next"
            secureTextEntry={true}
            spellCheck={false}
            submitBehavior="blurAndSubmit"
            testID="newPassword"
            textAlignVertical="center"
            textContentType="password"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={10}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="password-toggle"
          >
            <View
              color="#FFFFFF"
              name="eye"
              size={20}
              testID="mocked-material-community-icon"
            />
          </View>
        </View>
      </View>
      <View
        className="w-full"
      >
        <Text
          allowFontScaling={false}
          className="text-[16px] leading-[19px] font-inter-medium text-text-70 my-1.5 mx-1"
          maxFontSizeMultiplier={1}
        >
          confirmNewPassword
        </Text>
        <View
          className="flex-row items-center px-4 rounded-xl overflow-hidden bg-background-tertiary border border-transparent"
        >
          <TextInput
            allowFontScaling={false}
            autoCapitalize="none"
            autoComplete="password"
            autoCorrect={false}
            className="flex-1 py-3 text-text-100 placeholder:text-text-50 text-[16px] font-inter-medium"
            clearTextOnFocus={false}
            editable={true}
            enablesReturnKeyAutomatically={true}
            keyboardAppearance="dark"
            keyboardType="default"
            maxFontSizeMultiplier={1}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            onSubmitEditing={[Function]}
            passwordRules="minlength: 6; required: lower; required: upper; required: digit;"
            placeholder="confirmNewPasswordPlaceholder"
            returnKeyType="done"
            secureTextEntry={true}
            spellCheck={false}
            submitBehavior="blurAndSubmit"
            testID="confirmPassword"
            textAlignVertical="center"
            textContentType="password"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={10}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="password-toggle"
          >
            <View
              color="#FFFFFF"
              name="eye"
              size={20}
              testID="mocked-material-community-icon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      className="mt-6"
    >
      <View
        className="overflow-hidden rounded-xl"
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          hitSlop={20}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="change-password-submit-button"
        >
          <View
            colors={
              [
                "#E02A7F",
                "#6429C4",
              ]
            }
            end={
              {
                "x": 1,
                "y": 0,
              }
            }
            start={
              {
                "x": 0,
                "y": 0,
              }
            }
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 48,
                "justifyContent": "center",
              }
            }
            testID="linear-gradient"
          >
            <Text
              allowFontScaling={false}
              className="text-[16px] leading-[19px] font-inter-bold text-text-100"
              maxFontSizeMultiplier={1}
            >
              change
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
