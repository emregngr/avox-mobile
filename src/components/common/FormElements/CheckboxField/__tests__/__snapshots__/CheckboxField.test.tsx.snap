// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`CheckboxField Component Snapshot should render the CheckboxField Component successfully 1`] = `
<View>
  <View
    className="flex-row items-center"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={10}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="checkbox"
    >
      <View
        color="#000000"
        name="checkbox-blank-outline"
        size={24}
        testID="mocked-material-community-icon"
      />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      className="flex-row items-center flex-1 ml-3"
      collapsable={false}
      focusable={true}
      hitSlop={10}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <Text
        allowFontScaling={false}
        className="text-[16px] leading-[19px] font-inter-medium text-text-100 underline"
        maxFontSizeMultiplier={1}
      >
        label.test
      </Text>
    </View>
  </View>
</View>
`;
